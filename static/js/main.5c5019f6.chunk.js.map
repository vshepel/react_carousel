{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentSlide","setCurrentSlide","lastSlide","length","translateX","isPrevDisabled","isNextDisabled","handleSlideChange","slide","className","style","maxWidth","transform","transitionDuration","map","img","index","width","src","alt","String","type","disabled","onClick","App","state","this","htmlFor","id","name","min","max","value","onChange","e","setState","Number","currentTarget","checked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c5019f6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step = 3,\n  frameSize = 3,\n  itemWidth = 130,\n  animationDuration = 1000,\n  infinite = false,\n}) => {\n  const [currentSlide, setCurrentSlide] = useState(1);\n\n  const lastSlide = images.length - frameSize + 1;\n  const translateX = currentSlide * itemWidth - itemWidth;\n  const isPrevDisabled = !infinite && currentSlide <= 1;\n  const isNextDisabled = !infinite && currentSlide >= lastSlide;\n\n  const handleSlideChange = (slide: number) => {\n    if (slide < 1) {\n      if (infinite) {\n        setCurrentSlide(lastSlide);\n      } else {\n        setCurrentSlide(1);\n      }\n    } else if (slide > lastSlide) {\n      if (infinite) {\n        setCurrentSlide(currentSlide < lastSlide ? lastSlide : 1);\n      } else {\n        setCurrentSlide(lastSlide);\n      }\n    } else {\n      setCurrentSlide(slide);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          maxWidth: `${frameSize * itemWidth}px`,\n          transform: `translateX(-${translateX}px)`,\n          transitionDuration: `${animationDuration}ms`,\n        }}\n      >\n        {images.map((img, index) => (\n          <li key={img}>\n            <img\n              width={itemWidth}\n              src={img}\n              alt={String(index + 1)}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__controls\">\n        <button\n          type=\"button\"\n          disabled={isPrevDisabled}\n          onClick={() => handleSlideChange(currentSlide - step)}\n        >\n          ⬅️\n        </button>\n        <button\n          type=\"button\"\n          disabled={isNextDisabled}\n          onClick={() => handleSlideChange(currentSlide + step)}\n          data-cy=\"next\"\n        >\n          ➡️\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport Carousel from './components/Carousel';\n\nimport './App.scss';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    const handleChangeStep = (e: React.FormEvent<HTMLInputElement>) => {\n      this.setState({ step: Number(e.currentTarget.value) });\n    };\n\n    const handleChangeFrameSize = (e: React.FormEvent<HTMLInputElement>) => {\n      this.setState({ frameSize: Number(e.currentTarget.value) });\n    };\n\n    const handleChangeItemWidth = (e: React.FormEvent<HTMLInputElement>) => {\n      this.setState({ itemWidth: Number(e.currentTarget.value) });\n    };\n\n    const handleChangeAnimationDuration\n      = (e: React.FormEvent<HTMLInputElement>) => {\n        this.setState({ animationDuration: Number(e.currentTarget.value) });\n      };\n\n    const handleChangeInfinite = (e: React.FormEvent<HTMLInputElement>) => {\n      this.setState({ infinite: e.currentTarget.checked });\n    };\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n        <form className=\"App__settings\">\n          <fieldset>\n            <legend>Settings:</legend>\n            <div>\n              <label htmlFor=\"step\">Step:</label>\n              <input\n                id=\"step\"\n                name=\"step\"\n                type=\"number\"\n                min=\"1\"\n                max={images.length - 1}\n                value={step}\n                onChange={handleChangeStep}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"step\">Frame size:</label>\n              <input\n                id=\"frameSize\"\n                name=\"frameSize\"\n                type=\"number\"\n                min=\"1\"\n                max={images.length}\n                value={frameSize}\n                onChange={handleChangeFrameSize}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"step\">Item width:</label>\n              <input\n                id=\"itemWidth\"\n                name=\"itemWidth\"\n                type=\"number\"\n                min=\"1\"\n                value={itemWidth}\n                onChange={handleChangeItemWidth}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"step\">Animation duration:</label>\n              <input\n                id=\"animationDuration\"\n                name=\"animationDuration\"\n                type=\"number\"\n                min=\"0\"\n                value={animationDuration}\n                onChange={handleChangeAnimationDuration}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"step\">Infinite:</label>\n              <input\n                id=\"infinite\"\n                name=\"infinite\"\n                type=\"checkbox\"\n                checked={infinite}\n                onChange={handleChangeInfinite}\n              />\n            </div>\n          </fieldset>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}